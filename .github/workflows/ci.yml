name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build and Test
        run: mvn clean compile
  unit-tests:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build
        run: mvn clean test
  publish-to-maven-repository:
    runs-on: ubuntu-latest
    needs: unit-tests
      # Deploy only when:
      # 1. Manually triggered with deploy_to_maven = true
      # 2. OR when pushing to main branch
      # 3. OR when pushing a tag
    if: |
        (github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_to_maven == 'true') ||
        (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
  # Only run on main branch or releases
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: central
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      - name: Import GPG key
        run: |
          echo "${{ secrets.GPG_PRIVATE_KEY }}" > private.key
          gpg --batch --yes --import private.key
          rm private.key
          # List keys to verify import
          gpg --list-secret-keys --keyid-format LONG

      - name: Deploy to Maven Central
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          mvn clean deploy -DskipTests \
            -Dgpg.passphrase="${GPG_PASSPHRASE}" \
            --batch-mode

